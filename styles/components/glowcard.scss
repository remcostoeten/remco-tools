 @font-face {
  font-family: "Mona Sans";
  src: url("https://assets.codepen.io/64/Mona-Sans.woff2")
      format("woff2 supports variations"),
    url("https://assets.codepen.io/64/Mona-Sans.woff2")
      format("woff2-variations");
  font-weight: 100 1000;
}

@property --hue {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --rotate {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --bg-y {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --bg-x {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --glow-translate-y {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --bg-size {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --glow-opacity {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --glow-blur {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}
@property --glow-scale {
  syntax: "<number>";
  inherits: true;
  initial-value: 2;
}

@property --glow-radius {
  syntax: "<number>";
  inherits: true;
  initial-value: 2;
}

@property --white-shadow {
  syntax: "<number>";
  inherits: true;
  initial-value: 0;
}

:root {
  // utilities
  --debug: 0;
  --supported: 0;
  --not-supported: 0;

  // Pen vars
  --card-color: hsl(260deg 100% 3%);
  --text-color: hsl(260deg 10% 55%);
  --card-radius: 3.6vw;
  --card-width: 35vw;
  --border-width: 3px;
  --bg-size: 1;

  --hue: 0;
  --hue-speed: 1;

  --rotate: 0;
  --animation-speed: 4s;

  --interaction-speed: 0.55s;
  --glow-scale: 1.5;
  --scale-factor: 1;
  --glow-blur: 6; // 6
  --glow-opacity: 1; // 0.6
  --glow-radius: 100; // 100
  --glow-rotate-unit: 1deg;
}




.glowcard {
  width: var(--card-width);
  width: min(480px, var(--card-width));
  aspect-ratio: 1.5/1;
  color: white;
  margin: auto;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 2;
  border-radius: var(--card-radius);
  cursor: pointer;

  &:hover {
    > div {
      mix-blend-mode: darken;
      --text-color: white;
      box-shadow: 0 0 calc(var(--white-shadow) * 1vw)
        calc(var(--white-shadow) * 0.15vw) rgb(255 255 255 / 20%);
      animation: shadow-pulse calc(var(--animation-speed) * 2) linear infinite;
      &:before {
        --bg-size: 15;
        animation-play-state: paused;
        transition: --bg-size var(--interaction-speed) ease;
      }
    }
    .glow {
      --glow-blur: 1.5;
      --glow-opacity: 0.6;
      --glow-scale: 2.5;
      --glow-radius: 0;
      --rotate: 900;
      --glow-rotate-unit: 0;
      --scale-factor: 1.25;
      animation-play-state: paused;

      &:after {
        --glow-translate-y: 0;
        animation-play-state: paused;
        transition: --glow-translate-y 0s ease, --glow-blur 0.05s ease,
          --glow-opacity 0.05s ease, --glow-scale 0.05s ease,
          --glow-radius 0.05s ease;
      }
    }
  }

  &:before,
  &:after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: var(--card-radius);
  }

  > div {
    position: absolute;
    width: 100%;
    height: 100%;
    background: var(--card-color);
    border-radius: calc(calc(var(--card-radius) * 0.9));
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 800;
    text-transform: uppercase;
    font-stretch: 150%;
    font-size: 18px;
    font-size: clamp(1.5vw, 1.5vmin, 32px);
    color: var(--text-color);
    padding: calc(var(--card-width) / 8);

    span {
      display: inline-block;
      padding: 0.25em;
      border-radius: 4px;
      background: var(--text-color);
      color: black;
      margin-right: 8px;
      font-weight: 900;
    }

    &:before {
      content: "";
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: calc(calc(var(--card-radius) * 0.9));
      box-shadow: 0 0 20px black;
      mix-blend-mode: color-burn;
      z-index: -1;
      background: hsl(0deg 0% 16%)
        radial-gradient(
          30% 30% at calc(var(--bg-x) * 1%) calc(var(--bg-y) * 1%),
          hsl(calc(calc(var(--hue) * var(--hue-speed)) * 1deg) 100% 90%)
            calc(0% * var(--bg-size)),
          hsl(calc(calc(var(--hue) * var(--hue-speed)) * 1deg) 100% 80%)
            calc(20% * var(--bg-size)),
          hsl(calc(calc(var(--hue) * var(--hue-speed)) * 1deg) 100% 60%)
            calc(40% * var(--bg-size)),
          transparent 100%
        );
      width: calc(100% + var(--border-width));
      height: calc(100% + var(--border-width));
      animation: hue-animation var(--animation-speed) linear infinite,
        rotate-bg var(--animation-speed) linear infinite;
      transition: --bg-size var(--interaction-speed) ease;
    }
  }

  .glow {
    --glow-translate-y: 0;
    display: block;
    position: absolute;
    width: calc(var(--card-width) / 5);
    height: calc(var(--card-width) / 5);
    animation: rotate var(--animation-speed) linear infinite;
    transform: rotateZ(calc(var(--rotate) * var(--glow-rotate-unit)));
    transform-origin: center;
    border-radius: calc(var(--glow-radius) * 10vw);

    &:after {
      content: "";
      display: block;
      z-index: -2;
      filter: blur(calc(var(--glow-blur) * 10px));
      width: 130%;
      height: 130%;
      left: -15%;
      top: -15%;
      background: hsl(
        calc(calc(var(--hue) * var(--hue-speed)) * 1deg) 100% 60%
      );
      position: relative;
      border-radius: calc(var(--glow-radius) * 10vw);
      animation: hue-animation var(--animation-speed) linear infinite;
      transform: scaleY(calc(var(--glow-scale) * var(--scale-factor) / 1.1))
        scaleX(calc(var(--glow-scale) * var(--scale-factor) * 1.2))
        translateY(calc(var(--glow-translate-y) * 1%));
      opacity: var(--glow-opacity);
    }
  }
}

@keyframes shadow-pulse {
  0%,
  24%,
  46%,
  73%,
  96% {
    --white-shadow: 0.5;
  }
  12%,
  28%,
  41%,
  63%,
  75%,
  82%,
  98% {
    --white-shadow: 2.5;
  }
  6%,
  32%,
  57% {
    --white-shadow: 1.3;
  }
  18%,
  52%,
  88% {
    --white-shadow: 3.5;
  }
}

@keyframes rotate-bg {
  0% {
    --bg-x: 0;
    --bg-y: 0;
  }

  25% {
    --bg-x: 100;
    --bg-y: 0;
  }

  50% {
    --bg-x: 100;
    --bg-y: 100;
  }

  75% {
    --bg-x: 0;
    --bg-y: 100;
  }

  100% {
    --bg-x: 0;
    --bg-y: 0;
  }
}
@keyframes rotate {
  from {
    --rotate: -70;
    --glow-translate-y: -65;
  }

  25% {
    --glow-translate-y: -65;
  }

  50% {
    --glow-translate-y: -65;
  }

  60%,
  75% {
    --glow-translate-y: -65;
  }

  85% {
    --glow-translate-y: -65;
  }

  to {
    --rotate: calc(360 - 70);
    --glow-translate-y: -65;
  }
}
@keyframes hue-animation {
  0% {
    --hue: 0;
  }
  100% {
    --hue: 360;
  }
}
@layer properties {
  @property --shadow-scale {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --halo-scale {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --halo-offset {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
}
:root {
  --debug: 0;
  --bg-color: hsl(0, 0%, 8%);
  --svg-animation: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 122 116'%3E%3Cpath id='b' stroke='%23fff' stroke-linecap='round' stroke-width='0' d='M17.9256 115C17.434 111.774 13.1701 104.086 13.4282 95.6465C13.6862 87.207 18.6628 76.0721 17.9256 64.3628C17.1883 52.6535 8.7772 35.9512 9.00452 25.3907C9.23185 14.8302 16.2114 5.06512 17.9256 1'%3E%3C/path%3E%3Cpath id='d' stroke='%23fff' stroke-linecap='round' stroke-width='0' d='M84.1628 115C85.2376 112.055 94.5618 98.8394 93.9975 91.1338C93.4332 83.4281 82.5505 73.2615 84.1628 62.5704C85.775 51.8793 96.4803 35.4248 95.9832 25.7826C95.4861 16.1404 87.9113 4.71163 84.1628 1'%3E%3C/path%3E%3Cpath id='f' stroke='%23fff' stroke-linecap='round' stroke-width='0' d='M37.0913 115C37.9604 111.921 44.4347 99.4545 45.3816 92.9773C48.9305 68.7011 35.7877 73.9552 37.0913 62.7781C38.3949 51.6011 47.3889 36.9895 46.9869 26.9091C46.585 16.8286 40.1222 4.88034 37.0913 1'%3E%3C/path%3E%3Cpath id='h' stroke='%23fff' stroke-linecap='round' stroke-width='0' d='M112.443 115C111.698 112.235 108.25 106.542 107.715 93.7582C107.241 82.4286 107.229 83.9543 112.443 66.1429C116.085 44.0408 100.661 42.5908 101.006 33.539C101.35 24.4871 109.843 4.48439 112.443 1'%3E%3C/path%3E%3Cg%3E%3Ccircle r='1.5' fill='%23D9D9D9'%3E%3CanimateMotion dur='12s' repeatCount='indefinite'%3E%3Cmpath href='%23b'%3E%3C/mpath%3E%3C/animateMotion%3E%3C/circle%3E%3C/g%3E%3Cg%3E%3Ccircle r='1' fill='%23fff' fill-opacity='1' shape-rendering='crispEdges'%3E%3CanimateMotion dur='8s' repeatCount='indefinite'%3E%3Cmpath href='%23d'%3E%3C/mpath%3E%3C/animateMotion%3E%3C/circle%3E%3C/g%3E%3Cg%3E%3Ccircle r='.5' fill='%23fff' fill-opacity='1' shape-rendering='crispEdges'%3E%3CanimateMotion dur='10s' repeatCount='indefinite'%3E%3Cmpath href='%23f'%3E%3C/mpath%3E%3C/animateMotion%3E%3C/circle%3E%3C/g%3E%3Cg%3E%3Ccircle r='.8' fill='%23fff' fill-opacity='1' shape-rendering='crispEdges'%3E%3CanimateMotion dur='6s' repeatCount='indefinite'%3E%3Cmpath href='%23h'%3E%3C/mpath%3E%3C/animateMotion%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  --btn-radius: 12;
  --animation-timing-function: ease-in-out;
  --transitions: --shadow-scale 0.3s var(--animation-timing-function),
    --halo-scale 0.3s var(--animation-timing-function),
    --halo-offset 0.3s var(--animation-timing-function),
    transform 0.2s var(--animation-timing-function);
  --color-a: hsl(249.8 100% 50%);
  --color-b: hsl(259.15 100% 40%);
  --color-c: hsl(281.28 100% 56.01%);
}

article:has(.effect)
main button {
  --halo-scale: 0;
  --halo-offset: 100;
  --shadow-scale: 0;
  all: unset;
  font-family: "Inter", sans-serif;
  cursor: pointer;
  color: white;
  max-height: 46px;
  font-size: 22px;
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);
  border-radius: calc(var(--btn-radius) * 1px);
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 100%);
  position: relative;
  transition: var(--transitions);
}
main button > div {
  overflow: hidden;
  position: relative;
  border-radius: calc(var(--btn-radius) * 1px);
}
main button .inner {
  display: block;
  background: #212121;
  position: relative;
  width: calc(100% - 1px);
  height: calc(100% - 1px);
  top: 1px;
  left: 1px;
  border-radius: calc(var(--btn-radius) * 1px);
}
main button .inner:before, main button .inner:after {
  content: "";
  display: block;
  position: absolute;
  width: 70%;
  height: 1px;
  top: -1px;
  left: 50%;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0) 100%);
  transform: translateX(-50%);
  opacity: 0.6;
}
main button .inner:before {
  mix-blend-mode: overlay;
}
main button .inner:after {
  top: calc(100% - 2px);
  opacity: var(--halo-scale);
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0) 100%);
  filter: brightness(200%) opacity(0.3);
}
main button .particles {
  background-image: var(--svg-animation), var(--svg-animation);
  background-repeat: no-repeat, repeat;
  background-position: center, center top 100%;
  background-size: 100% 100%, 50%;
  -webkit-mask-image: linear-gradient(to top, transparent, black, transparent);
  border-radius: calc(var(--btn-radius) * 1px);
  width: 100%;
  height: 100%;
  position: absolute;
  opacity: var(--halo-scale);
  /* Since having the blurry filter creates a weird artefact on safari
     I decided to doulbe the particles background in a pseudo-element
     And apply the blur filter on it.
  */
}
main button .particles:before {
  content: "";
  display: block;
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: var(--svg-animation), var(--svg-animation), var(--svg-animation);
  background-repeat: no-repeat, repeat, repeat;
  background-position: center, center top 100%, center center;
  background-size: 100% 100%, 50%, 120%;
  filter: blur(1px);
  border-radius: calc(var(--btn-radius) * 1px);
  will-change: filter;
}
main button .text {
  position: relative;
  z-index: 2;
  padding: 0.545em 1.455em;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  display: block;
  background: linear-gradient(180deg, #ffffff 0%, rgba(255, 255, 255, 0.7) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  text-fill-color: transparent;
  text-shadow: 0px 2px 2px rgba(0, 0, 0, 0.25);
}
main button .halo {
  border-radius: calc(calc(var(--btn-radius) + 1) * 1px);
  overflow: hidden;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: calc(var(--btn-radius) * 1px);
}
main button .halo:before {
  content: "";
  display: block;
  width: 80%;
  height: 60%;
  position: absolute;
  top: 80%;
  left: 50%;
  background: linear-gradient(180deg, var(--color-a) 0%, var(--color-b) 39.33%, var(--color-c) 59%);
  filter: blur(12px) saturate(1.2);
  transform: translateX(-50%) translateY(calc(var(--halo-offset) * 1%)) scale(var(--halo-scale));
  will-change: filter;
}
main button:hover {
  --halo-scale: 1;
  --shadow-scale: 1;
  --halo-offset: -70;
}
main button:active {
  --halo-scale: 1.1;
  --halo-offset: -80;
  --shadow-scale: 1.2;
  transform: translateY(calc(var(--halo-scale) * 1px));
}
main .shadow {
  position: absolute;
  width: 60%;
  height: 20%;
  bottom: -26%;
  z-index: -1;
  left: 0;
  right: 0;
  margin: auto;
  border-radius: 100000%;
  /* let's reuse the same variable */
  transform: scale(var(--shadow-scale));
  opacity: calc(var(--halo-scale) / 2);
  background: linear-gradient(to bottom, var(--color-c), var(--color-b), var(--color-a));
  filter: blur(8px) opacity(0.7);
  will-change: filter;
}

/* 
  Fallback for browsers who do not support registerProperty.
  ( Which cannot use variables transitions )
*/
body.registerProperty-not-supported button .inner:after {
  transition: opacity 0.3s ease;
}
body.registerProperty-not-supported button, body.registerProperty-not-supported button .halo:before {
  transition: transform 0.3s ease;
}
body.registerProperty-not-supported button .shadow {
  transition: transform 0.3s ease, opacity 0.3s ease;
}